[versions]
activityCompose = "1.7.2"
agp = "8.5.0"
android-compileSdk = "34"
android-minSdk = "30"
android-targetSdk = "34"
androidx-activityCompose = "1.9.3"
androidx-lifecycle = "2.8.3"
chart = "1.1.0"
compose-multiplatform = "1.7.0"
composeBom = "2024.02.00"
composeSonner = "0.3.10"
compose-destinations = "1.9.54"
core = "3.5.1"
coreVersion = "1.9.54"
exposedDaoVersion = "0.61.0"
exposedJavaTimeVersion = "0.61.0"
exposedJdbcVersion = "0.61.0"
jetbrainsExposedCore = "0.61.0"
kotlin = "2.0.21"
kotlinReflect = "2.0.21"
kotlinx-coroutines = "1.9.0"
kotlinxDatetime = "0.6.1"
kotlinxSerializationCore = "1.7.3"
kotlinxSerializationJson = "1.7.3"
ksp = "2.0.21-1.0.25"
ktor = "3.0.0"
ktorClientCio = "3.0.1"
ktorClientContentNegotiation = "3.0.1"
ktorClientCore = "3.0.1"
ktorClientLogging = "3.0.1"
ktorClientSerialization = "3.0.1"
ktorSerializationKotlinxJson = "3.0.1"
ktorWebsockets = "3.1.2"
logback = "1.5.11"
materialIconsExtended = "1.7.3"
postgresql = "42.6.0"
postgresqlPostgresqlVersion = "42.7.5"
annotationJvm = "1.9.1"
constraintlayout = "2.2.1"
routerComposeJvm = "1.0.2"
uiGraphicsAndroid = "1.7.2"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-annotation-jvm = { group = "androidx.annotation", name = "annotation-jvm", version.ref = "annotationJvm" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "uiGraphicsAndroid" }
chart = { module = "io.github.thechance101:chart", version.ref = "chart" }
compose-destinations-core = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "coreVersion" }
compose-destinations-ksp = { group = "io.github.raamcosta.compose-destinations", name = "ksp", version.ref = "compose-destinations" }
compose-sonner = { module = "io.github.brdominguez:compose-sonner", version.ref = "composeSonner" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
core = { module = "com.google.zxing:core", version.ref = "core" }
exposed-core-v0610 = { module = "org.jetbrains.exposed:exposed-core", version.ref = "jetbrainsExposedCore" }
exposed-dao-v0610 = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedDaoVersion" }
exposed-java-time-v0610 = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposedJavaTimeVersion" }
exposed-jdbc-v0610 = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedJdbcVersion" }
io-ktor-ktor-client-content-negotiation2 = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientContentNegotiation" }
io-ktor-ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorSerializationKotlinxJson" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }  # FIXED: Now uses consistent version
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerializationCore" }
ktor-ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientCio" }
ktor-ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore" }
ktor-ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientLogging" }
ktor-ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorClientSerialization" }
ktor-serialization = { module = "io.ktor:ktor-serialization" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets" }
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktorWebsockets" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
org-jetbrains-kotlinx-kotlinx-serialization-json2 = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
postgresql-v4275 = { module = "org.postgresql:postgresql", version.ref = "postgresqlPostgresqlVersion" }
router-compose-jvm = { module = "es.gaspardev:router-compose-jvm", version.ref = "routerComposeJvm" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }